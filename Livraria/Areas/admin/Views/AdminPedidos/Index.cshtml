@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging

@model ReflectionIT.Mvc.Paging.PagingList<Livraria.Models.Pedido>
@{
    ViewData["Title"] = "Index";
}

<h1>Pedidos</h1>

<form method="get" class="form-inline">
    <input name="filter" class="form-control" placeholder="Buscar pedidos"
    value="@Model.RouteValue["Filter"]"/>
   
    <button type="submit" class="btn btn-primary">
        <span class="glyphicon-search" aria-hidden="true"></span>Buscar
    </button>

</form>



<p>
    <a class="btn btn-success"  asp-action="Create">Criar</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
               @Html.DisplayNameFor(model => model.Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sobrenome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Endereco1)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Endereco2)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cep)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Estado)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cidade)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Telefone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PedidoEnviado)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PedidoEntregueEm)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sobrenome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Endereco1)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Endereco2)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cep)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Estado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cidade)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Telefone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PedidoEnviado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PedidoEntregueEm)
            </td>
            <td>
                    <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.PedidoId">Editar</a> |
                    <a class="btn btn-info" asp-action="Details" asp-route-id="@item.PedidoId">Detalhes</a> |
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.PedidoId">Excluir</a> |
                    <a class="btn btn-light" asp-action="PedidoLivros" asp-route-id="@item.PedidoId">Ver itens</a>
            </td>
        </tr>
}
    </tbody>
</table>
Total de pedidos:@Model.TotalRecordCount
<br />
<nav>
    @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model })
</nav>
